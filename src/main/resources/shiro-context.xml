<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的ShiroDbRealm.java -->
	<bean id="myRealm" class="org.me.plugin.shiro.authentication.MyRealm" />

	<!-- Shiro默认会使用Servlet容器的Session,可通过sessionMode属性来指定使用Shiro原生Session -->
	<!-- 即<property name="sessionMode" value="native"/>,详细说明见官方文档 -->
	<!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
	</bean>
	
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
	
    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    
    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.me.plugin.shiro.authentication.MyAuthenticationFilter">
    	<property name="usernameParam" value="strLoginId"/>
        <property name="passwordParam" value="strPassword"/>
        <property name="rememberMeParam" value="rememberMe"/>
    </bean>
    
    <bean id="loginFilter" class="org.me.plugin.shiro.filter.LoginFilter" />
    
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/user/login.do" />
		<!-- 登录成功后要跳转的连接   -->
		<property name="successUrl" value="/system/main.do"/>
		<!-- 用户访问未对其授权的资源时,所显示的连接 -->
		<!-- 若想更明显的测试此属性可以修改它的值,如unauthor.jsp,然后用户登录后访问/system/main.jsp就看见浏览器会显示unauthor.jsp -->
		<property name="unauthorizedUrl" value="/error.jsp" />
		<property name="filters"> 
			<map>
				<entry key="login">
					<ref bean="loginFilter"/>
				</entry>
				<entry key="authc">
					<ref bean="formAuthenticationFilter"/>
				</entry>
			</map>
		</property>
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<!-- 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->
		<!--权限控制
	             anon: 不需要权限就能访问
	             logout: 注销
	             authc: 需要登录后才能访问，但不限制权限
	             authc, roles[Admin]: 必须是 Admin 权限才能访问
        -->
		<property name="filterChainDefinitions">
			<value>
				/user/**=anon
				/**.do=login,authc,user
			</value>
		</property>
	</bean>
</beans>